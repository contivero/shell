#!/bin/sh
#
# Check that the commit message abides by certain guidelines, namely: 
#    * The subject:
#        - should start with a capital letter
#        - should not end with a period
#        - should ideally be at most 50 characters.
#    * Each line from the body should be at most 72 characters.
#    * Check (very naively) that the imperative is being used.

# Terminal styling
RED='\033[0;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No color

msg_file="$1"

err() { printf '%b\n' "$*" >&2 ; }

# Get string head, i.e. the first letter
str_head() { echo "$1" | cut -c1; }

str_tail() { echo "$1" | cut -c2-; }

str_last() { printf %s "$1" | tail -c 1; }

to_upper() { echo "$1" | tr '[:lower:]' '[:upper:]'; }

capitalize() { echo "$(to_upper "$(str_head "$1")")$(str_tail "$1")"; }

case_insensitive_match() {
  if [ "$(to_upper "$1")" = "$(to_upper "$2")" ]; then
    return 0
  fi
  return 1
}

print_commit_message() {
  while read -r line; do
    # Skip comments
    if [ "$(str_head "$line")" = "#" ]; then
      continue
    fi
    echo "$line"
  done < "$msg_file"
}

abort_commit() {
  err 'The invalid commit message was:'
  print_commit_message
  err "${RED}Commit aborted. Fix the commit message and try again.${NC}"
  exit 1
}

ask_for_confirmation() {
  printf %s 'Continue anyway? [y/n] '
  while read -r yn < /dev/tty; do
    case $yn in
      [Yy]* )
        break;;
      [Nn]* )
        abort_commit
        break;;
      * ) echo 'Please answer y (Yes) or n (No).';;
    esac
  done
}

subject=$(sed 1q "$msg_file")

# Check subject length
if [ ${#subject} -gt 50 ]; then
  printf '%b\n' "${YELLOW}Ideally, the subject of the commit message should be no more than 50 characters.${NC}"
  echo "At worst, it should be 72 characters. Right now the subject has ${#subject} characters."
  ask_for_confirmation
fi

# Check that subject doesn't end with a period
if [ "$(str_last "$subject")" = '.' ]; then
  printf '%b\n' "${RED}The subject of the commit message should not end with a period${NC}"
  ask_for_confirmation
fi

if [ "$(str_head "$subject")" = '{' ]; then
  first_word="$(echo "$subject" | awk '{print $2}')"
else
  first_word="$(echo "$subject" | awk '{print $1}')"
fi

# Check if subject starts with a lowercase letter
case "$(str_head "$first_word")" in
  [[:lower:]]) 
    printf '%b\n' "${RED}The commit message subject should start with a capital letter${NC}"
    printf '%b\n' "Found: ${RED}$first_word${NC}. Should be: ${GREEN}$(capitalize "$first_word")${NC}"
    ask_for_confirmation
    ;;
esac

# Check if the subject starts with a verb in the right tense
usual_verbs='
Added_Add
Changed_Change
Cleaned_Clean
Deleted_Delete
Fixed_Fix
Made_Make
Modified_Modify
Optimized_Optimize
Polished_Polish
Refactored_Refactor
Removed_Remove
Updated_Update
'

for word in $usual_verbs; do
  invalid_word="$(echo "$word" | awk '{split($0, a, "_"); print a[1]}')"
  imperative="$(echo "$word" | awk '{split($0, a, "_"); print a[2]}')"
  if case_insensitive_match "$first_word" "$invalid_word"; then
    printf '%b\n' "${RED}The commit subject should be written in imperative${NC}"
    printf '%b\n' "    - Found: ${RED}$first_word${NC}. Should be: ${GREEN}$imperative${NC}."
    ask_for_confirmation
  fi 
done

# Check line length
while read -r line; do
  # Skip comments
  if [ "$(str_head "$line")" = '#' ]; then
    continue
  fi
  if [ ${#line} -gt 72 ]; then
    printf '%b\n' "${YELLOW}Commit message lines should be at most 72 characters. ${NC}"
    echo "The following commit message line has ${#line} characters:"
    echo "${line}"
    ask_for_confirmation
  fi
done < "$msg_file"

exit 0
